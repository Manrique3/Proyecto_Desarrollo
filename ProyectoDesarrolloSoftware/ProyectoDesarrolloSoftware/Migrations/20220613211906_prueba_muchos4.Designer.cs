// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoDesarrolloSoftware.DataBase;

namespace ProyectoDesarrolloSoftware.Migrations
{
    [DbContext(typeof(DSDBContext))]
    [Migration("20220613211906_prueba_muchos4")]
    partial class prueba_muchos4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MarcaProveedor", b =>
                {
                    b.Property<int>("MarcasIDMarca")
                        .HasColumnType("integer");

                    b.Property<int>("ProveedoresId_proveedor")
                        .HasColumnType("integer");

                    b.HasKey("MarcasIDMarca", "ProveedoresId_proveedor");

                    b.HasIndex("ProveedoresId_proveedor");

                    b.ToTable("MarcaProveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.Property<int>("Id_lugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("LugarId_lugar")
                        .HasColumnType("integer");

                    b.Property<string>("nombre_lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo_lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_lugar");

                    b.HasIndex("LugarId_lugar");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor", b =>
                {
                    b.Property<int>("Id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Id_lugar")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("fk_lugar")
                        .HasColumnType("integer");

                    b.HasKey("Id_proveedor");

                    b.HasIndex("Id_lugar");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor_Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .HasColumnType("integer");

                    b.Property<int>("Id_proveedor")
                        .HasColumnType("integer");

                    b.HasKey("IDMarca", "Id_proveedor");

                    b.HasIndex("Id_proveedor");

                    b.ToTable("ProvMarcas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Usuario", b =>
                {
                    b.Property<int>("IDusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("IDusuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Vehiculo", b =>
                {
                    b.Property<int>("IDVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Año")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialMotor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<int>("fk_marca")
                        .HasColumnType("integer");

                    b.Property<int>("puestos")
                        .HasColumnType("integer");

                    b.HasKey("IDVehiculo");

                    b.HasIndex("fk_marca");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("MarcaProveedor", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", null)
                        .WithMany()
                        .HasForeignKey("MarcasIDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProveedoresId_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Lugar", null)
                        .WithMany("fk_lugar")
                        .HasForeignKey("LugarId_lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Lugar", "Lugar")
                        .WithMany()
                        .HasForeignKey("Id_lugar");

                    b.Navigation("Lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor_Marca", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("IDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Vehiculo", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", "Marca")
                        .WithMany("Vehiculos")
                        .HasForeignKey("fk_marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.Navigation("fk_lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Marca", b =>
                {
                    b.Navigation("Vehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
