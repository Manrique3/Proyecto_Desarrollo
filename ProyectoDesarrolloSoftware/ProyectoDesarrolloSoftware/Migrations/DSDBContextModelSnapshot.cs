// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoDesarrolloSoftware.DataBase;

namespace ProyectoDesarrolloSoftware.Migrations
{
    [DbContext(typeof(DSDBContext))]
    partial class DSDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Administrador", b =>
                {
                    b.Property<int>("Id_Administrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Administrador");

                    b.ToTable("Administradors");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Administrador_Cotizacion", b =>
                {
                    b.Property<int>("Id_Administrador")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Cotizacion")
                        .HasColumnType("integer");

                    b.HasKey("Id_Administrador", "Id_Cotizacion");

                    b.HasIndex("Id_Cotizacion");

                    b.ToTable("Administrador_Cotizacion");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Asegurado", b =>
                {
                    b.Property<int>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cedula");

                    b.ToTable("Asegurados");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion", b =>
                {
                    b.Property<int>("Id_Cotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id_Cotizacion");

                    b.ToTable("Cotizacions");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion_Proveedor", b =>
                {
                    b.Property<int>("Id_Cotizacion")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Proveedor")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Pieza_Pieza_Proveedor")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Proveedor_Pieza_Proveedor")
                        .HasColumnType("integer");

                    b.Property<string>("estatus")
                        .HasColumnType("text");

                    b.HasKey("Id_Cotizacion", "Id_Proveedor", "Id_Pieza_Pieza_Proveedor", "Id_Proveedor_Pieza_Proveedor");

                    b.HasIndex("Id_Proveedor");

                    b.HasIndex("Id_Pieza_Pieza_Proveedor", "Id_Proveedor_Pieza_Proveedor");

                    b.ToTable("Cotizacion_Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion_Taller", b =>
                {
                    b.Property<int>("Id_Cotizacion")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Taller")
                        .HasColumnType("integer");

                    b.HasKey("Id_Cotizacion", "Id_Taller");

                    b.HasIndex("Id_Taller");

                    b.ToTable("Cotizacion_Taller");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion__Pieza", b =>
                {
                    b.Property<int>("Id_Cotizacion")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Pieza")
                        .HasColumnType("integer");

                    b.HasKey("Id_Cotizacion", "Id_Pieza");

                    b.HasIndex("Id_Pieza");

                    b.ToTable("Cotizacion__Pieza");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Incidente", b =>
                {
                    b.Property<int>("Id_Incidente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PeritoId_Perito")
                        .HasColumnType("integer");

                    b.Property<int?>("PolizaId_Poliza")
                        .HasColumnType("integer");

                    b.Property<string>("estadoEv")
                        .HasColumnType("text");

                    b.Property<int>("fk_vehiculo")
                        .HasColumnType("integer");

                    b.HasKey("Id_Incidente");

                    b.HasIndex("PeritoId_Perito");

                    b.HasIndex("PolizaId_Poliza");

                    b.HasIndex("fk_vehiculo");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.Property<int>("Id_lugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("LugarId_lugar")
                        .HasColumnType("integer");

                    b.Property<string>("nombre_lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tipo_lugar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_lugar");

                    b.HasIndex("LugarId_lugar");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Perito", b =>
                {
                    b.Property<int>("Id_Perito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Perito");

                    b.ToTable("Peritos");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Pieza", b =>
                {
                    b.Property<int>("Id_Pieza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id_Pieza");

                    b.ToTable("Piezas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Pieza_Proveedor", b =>
                {
                    b.Property<int>("Id_Pieza")
                        .HasColumnType("integer");

                    b.Property<int>("Id_proveedor")
                        .HasColumnType("integer");

                    b.Property<int>("cantidad")
                        .HasColumnType("integer");

                    b.HasKey("Id_Pieza", "Id_proveedor");

                    b.HasIndex("Id_proveedor");

                    b.ToTable("Pieza_Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Poliza", b =>
                {
                    b.Property<int>("Id_Poliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AseguradoCedula")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("fk_vehiculo")
                        .HasColumnType("integer");

                    b.HasKey("Id_Poliza");

                    b.HasIndex("AseguradoCedula");

                    b.HasIndex("fk_vehiculo");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor", b =>
                {
                    b.Property<int>("Id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("fk_lugar")
                        .HasColumnType("integer");

                    b.HasKey("Id_proveedor");

                    b.HasIndex("fk_lugar");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor_Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .HasColumnType("integer");

                    b.Property<int>("Id_proveedor")
                        .HasColumnType("integer");

                    b.HasKey("IDMarca", "Id_proveedor");

                    b.HasIndex("Id_proveedor");

                    b.ToTable("ProvMarcas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Taller", b =>
                {
                    b.Property<int>("Id_Taller")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("fk_lugar")
                        .HasColumnType("integer");

                    b.HasKey("Id_Taller");

                    b.HasIndex("fk_lugar");

                    b.ToTable("Tallers");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Taller_Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Taller")
                        .HasColumnType("integer");

                    b.HasKey("IDMarca", "Id_Taller");

                    b.HasIndex("Id_Taller");

                    b.ToTable("Taller_Marcas");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Usuario", b =>
                {
                    b.Property<int>("IDusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("IDusuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Vehiculo", b =>
                {
                    b.Property<int>("Placa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Año")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialMotor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<int>("fk_marca")
                        .HasColumnType("integer");

                    b.Property<int>("puestos")
                        .HasColumnType("integer");

                    b.HasKey("Placa");

                    b.HasIndex("fk_marca");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Administrador_Cotizacion", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("Id_Administrador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("Id_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Cotizacion");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion_Proveedor", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("Id_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Id_Proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Pieza_Proveedor", "Pieza_Proveedor")
                        .WithMany()
                        .HasForeignKey("Id_Pieza_Pieza_Proveedor", "Id_Proveedor_Pieza_Proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Pieza_Proveedor");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion_Taller", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("Id_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("Id_Taller")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Cotizacion__Pieza", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("Id_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Pieza", "Pieza")
                        .WithMany()
                        .HasForeignKey("Id_Pieza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Pieza");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Incidente", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Perito", null)
                        .WithMany("Incidentes")
                        .HasForeignKey("PeritoId_Perito");

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Poliza", null)
                        .WithMany("Incidentes")
                        .HasForeignKey("PolizaId_Poliza");

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("fk_vehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Lugar", null)
                        .WithMany("fk_lugar")
                        .HasForeignKey("LugarId_lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Pieza_Proveedor", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Pieza", "Pieza")
                        .WithMany()
                        .HasForeignKey("Id_Pieza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pieza");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Poliza", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Asegurado", null)
                        .WithMany("Poliza")
                        .HasForeignKey("AseguradoCedula");

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("fk_vehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Lugar", "Lugar")
                        .WithMany()
                        .HasForeignKey("fk_lugar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Proveedor_Marca", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("IDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Taller", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Lugar", "Lugar")
                        .WithMany()
                        .HasForeignKey("fk_lugar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Taller_Marca", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("IDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("Id_Taller")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Vehiculo", b =>
                {
                    b.HasOne("ProyectoDesarrolloSoftware.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("fk_marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Asegurado", b =>
                {
                    b.Navigation("Poliza");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Lugar", b =>
                {
                    b.Navigation("fk_lugar");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Perito", b =>
                {
                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("ProyectoDesarrolloSoftware.Entidades.Poliza", b =>
                {
                    b.Navigation("Incidentes");
                });
#pragma warning restore 612, 618
        }
    }
}
